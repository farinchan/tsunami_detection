version: '3.8'

services:
  # Tsunami Detection Streamlit App
  tsunami-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: tsunami-detection-app
    ports:
      - "8501:8501"  # Streamlit port
    volumes:
      # Mount untuk data persistence
      - ./data:/app/data
      - ./logs:/app/logs
      - ./deteksi_ombak.csv:/app/deteksi_ombak.csv
      - ./.env:/app/.env
      # Mount untuk video files (jika ada)
      - ./scene1.mp4:/app/scene1.mp4
      - ./scene2.mp4:/app/scene2.mp4
      - ./wave1.mp4:/app/wave1.mp4
      - ./wave2.mp4:/app/wave2.mp4
      - ./wave3.mp4:/app/wave3.mp4
    environment:
      # Environment variables dari .env file
      - PYTHONUNBUFFERED=1
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      # Network settings untuk RTSP
      - OPENCV_FFMPEG_CAPTURE_OPTIONS=rtsp_transport;tcp|stimeout;5000000|max_delay;500000
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - tsunami-network
    # Untuk akses ke kamera RTSP dalam network yang sama
    network_mode: "host"  # Gunakan jika perlu akses langsung ke network host untuk RTSP
    
  # Optional: Database untuk logging (PostgreSQL)
  # Uncomment jika ingin menggunakan database
  # postgres:
  #   image: postgres:13
  #   container_name: tsunami-postgres
  #   environment:
  #     POSTGRES_DB: tsunami_db
  #     POSTGRES_USER: tsunami_user
  #     POSTGRES_PASSWORD: tsunami_pass
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./db_init:/docker-entrypoint-initdb.d
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   networks:
  #     - tsunami-network

  # Optional: Redis untuk caching
  # Uncomment jika ingin menggunakan Redis untuk caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: tsunami-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - tsunami-network

  # Optional: Nginx sebagai reverse proxy
  # Uncomment jika ingin menggunakan Nginx
  # nginx:
  #   image: nginx:alpine
  #   container_name: tsunami-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/nginx/ssl  # untuk HTTPS certificates
  #   depends_on:
  #     - tsunami-app
  #   restart: unless-stopped
  #   networks:
  #     - tsunami-network

networks:
  tsunami-network:
    driver: bridge
    # Untuk RTSP streaming
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes untuk data persistence
volumes:
  # postgres_data:
  # redis_data:
  data_volume:
    driver: local
  logs_volume:
    driver: local